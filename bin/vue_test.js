// Generated by Haxe 4.3.1
(function ($global) { "use strict";
class vue3_VueComponent {
	constructor() {
		if(vue3_VueComponent._hx_skip_constructor) {
			return;
		}
		this._hx_constructor();
	}
	_hx_constructor() {
		this.components = { };
		this.methods = { };
		this.data = $bind(this,this.data);
		if(Reflect.field(this,"methodsKeys") != null) {
			let array = Reflect.getProperty(this,"methodsKeys");
			let _g = 0;
			while(_g < array.length) {
				let key = array[_g];
				++_g;
				this.methods[key] = Reflect.getProperty(this,key);
			}
		}
	}
	data() {
		return { };
	}
	component(type) {
		let name = type.__name__;
		let list = name.split(".");
		Reflect.setProperty(this.components,list[list.length - 1],Type.createInstance(type,[]));
	}
}
vue3_VueComponent.__name__ = "vue3.VueComponent";
class App extends vue3_VueComponent {
	constructor() {
		vue3_VueComponent._hx_skip_constructor = true;
		super();
		vue3_VueComponent._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this.methodsKeys = ["onClick"];
		this.template = "<div>\n    <el-button @click=\"onClick\" >{{ btn_label }}</el-button>\n    <el-button>测试按钮2号</el-button>\n    <MainPage/>\n</div>";
		super._hx_constructor();
		this.component(MainPage);
	}
	data() {
		return { btn_label : "测试文案"};
	}
	onClick() {
		console.log("test/App.hx:23:","这是点击测试");
		this.btn_label = "点击成功";
	}
}
App.__name__ = "App";
class MainPage extends vue3_VueComponent {
	constructor() {
		vue3_VueComponent._hx_skip_constructor = true;
		super();
		vue3_VueComponent._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this.methodsKeys = ["onClick"];
		this.template = "<el-button>这是main组件的按钮</el-button>\n<el-button @click=\"onClick\">测试4号按钮</el-button>";
		super._hx_constructor();
		console.log("test/MainPage.hx:7:","构造测试");
	}
	onClick() {
		console.log("test/MainPage.hx:11:","点击到了");
	}
}
MainPage.__name__ = "MainPage";
Math.__name__ = "Math";
class Reflect {
	static field(o,field) {
		try {
			return o[field];
		} catch( _g ) {
			return null;
		}
	}
	static getProperty(o,field) {
		let tmp;
		if(o == null) {
			return null;
		} else {
			let tmp1;
			if(o.__properties__) {
				tmp = o.__properties__["get_" + field];
				tmp1 = tmp;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				return o[tmp]();
			} else {
				return o[field];
			}
		}
	}
	static setProperty(o,field,value) {
		let tmp;
		let tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["set_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			o[tmp](value);
		} else {
			o[field] = value;
		}
	}
}
Reflect.__name__ = "Reflect";
class Type {
	static createInstance(cl,args) {
		let ctor = Function.prototype.bind.apply(cl,[null].concat(args));
		return new (ctor);
	}
}
Type.__name__ = "Type";
class VueTest {
	static main() {
		let app = new App();
		let vue = Vue.createApp(app);
		vue.use(ElementPlus);
		vue.mount("#app");
	}
}
VueTest.__name__ = "VueTest";
class haxe_iterators_ArrayIterator {
	constructor(array) {
		this.current = 0;
		this.array = array;
	}
	hasNext() {
		return this.current < this.array.length;
	}
	next() {
		return this.array[this.current++];
	}
}
haxe_iterators_ArrayIterator.__name__ = "haxe.iterators.ArrayIterator";
function vue3_Vue_set(key,value) {
	this[key] = value;
}
var $_;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
{
	String.__name__ = "String";
	Array.__name__ = "Array";
}
vue3_VueComponent._hx_skip_constructor = false;
VueTest.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
